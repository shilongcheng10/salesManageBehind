<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicom.salesmanagebehind.dao.ManagerDao">
  <resultMap id="BaseResultMap" type="com.unicom.salesmanagebehind.model.Manager">
    <id column="managerId" jdbcType="INTEGER" property="managerId" />
    <result column="managerName" jdbcType="VARCHAR" property="managerName" />
    <result column="loginName" jdbcType="VARCHAR" property="loginName" />
    <result column="managerSex" jdbcType="VARCHAR" property="managerSex" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="managerTel" jdbcType="VARCHAR" property="managerTel" />
    <result column="managerEmail" jdbcType="VARCHAR" property="managerEmail" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    managerId, managerName, loginName, managerSex, password, managerTel, managerEmail,isDelete
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from manager
    where managerId = #{managerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from manager
    where managerId = #{managerId,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.unicom.salesmanagebehind.model.Manager">
    <selectKey keyProperty="managerId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="managerName != null">
        managerName,
      </if>
      <if test="loginName != null">
        loginName,
      </if>
      <if test="managerSex != null">
        managerSex,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="managerTel != null">
        managerTel,
      </if>
      <if test="managerEmail != null">
        managerEmail,
      </if>
      isDelete,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="managerName != null">
        #{managerName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="managerSex != null">
        #{managerSex,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="managerTel != null">
        #{managerTel,jdbcType=VARCHAR},
      </if>
      <if test="managerEmail != null">
        #{managerEmail,jdbcType=VARCHAR},
      </if>
      #{isDelete,jdbcType=INTEGER},
    </trim>
  </insert>
  <insert id="insert" parameterType="com.unicom.salesmanagebehind.model.Manager">
    <selectKey keyProperty="managerId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into manager (managerName, loginName, managerSex,
    password, managerTel, managerEmail,isDelete)
    values (#{managerName,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{managerSex,jdbcType=VARCHAR},
    #{password,jdbcType=VARCHAR}, #{managerTel,jdbcType=VARCHAR}, #{managerEmail,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicom.salesmanagebehind.model.Manager">
    update manager
    <set>
      <if test="managerName != null">
        managerName = #{managerName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        loginName = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="managerSex != null">
        managerSex = #{managerSex,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="managerTel != null">
        managerTel = #{managerTel,jdbcType=VARCHAR},
      </if>
      <if test="managerEmail != null">
        managerEmail = #{managerEmail,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where managerId = #{managerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicom.salesmanagebehind.model.Manager">
    update manager
    set managerName = #{managerName,jdbcType=VARCHAR},
      loginName = #{loginName,jdbcType=VARCHAR},
      managerSex = #{managerSex,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      managerTel = #{managerTel,jdbcType=VARCHAR},
      managerEmail = #{managerEmail,jdbcType=VARCHAR},
      isDelete = #{isDelete,jdbcType=INTEGER}
    where managerId = #{managerId,jdbcType=INTEGER}
  </update>


  <select id="getList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from manager
    <where>
      <if test="managerId != null">
        and managerId = #{managerId}
      </if>
      <if test="managerName != null">
        and managerName like '%${managerName}%'
      </if>
      <if test="loginName != null">
        and loginName like '%${loginName}%'
      </if>
      <if test="managerTel != null">
        and managerTel like '%${managerTel}%'
      </if>
      and isDelete=0
    </where>
  </select>

  <insert id="addManager" parameterType="com.unicom.salesmanagebehind.model.Manager">
    insert into manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="managerName != null">
        managerName,
      </if>
      <if test="loginName != null">
        loginName,
      </if>
      <if test="managerSex != null">
        managerSex,
      </if>
      <if test="managerTel != null">
        managerTel,
      </if>
      <if test="managerEmail != null">
        managerEmail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="managerName != null">
        #{managerName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="managerSex != null">
        #{managerSex,jdbcType=VARCHAR},
      </if>
      <if test="managerTel != null">
        #{managerTel,jdbcType=VARCHAR},
      </if>
      <if test="managerEmail != null">
        #{managerEmail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="update" parameterType="com.unicom.salesmanagebehind.model.Manager">
    update manager
    set managerName = #{managerName,jdbcType=VARCHAR},
      loginName = #{loginName,jdbcType=VARCHAR},
      managerSex = #{managerSex,jdbcType=VARCHAR},
      managerTel = #{managerTel,jdbcType=VARCHAR},
      managerEmail = #{managerEmail,jdbcType=VARCHAR}
    where managerId = #{managerId,jdbcType=INTEGER}
  </update>

  <update id="delete" parameterType="java.lang.Integer">
    update manager
    set isDelete=1
    where managerId = #{managerId,jdbcType=INTEGER}
  </update>

  <update id="deleteAll" parameterType="java.util.List">
    update manager
    set isDelete=1
    where managerId IN
    <foreach collection="list" item="managerId" open="(" close=")" separator=",">
      #{managerId}
    </foreach>
  </update>

</mapper>